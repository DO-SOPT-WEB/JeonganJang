{"ast":null,"code":"var _jsxFileName = \"/Users/jangjeong-an/JeonganJang/week3/src/components/main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selection, setSelection] = useState(\"\");\n  const handleSelect = option => {\n    setSelection(option);\n  };\n  const handleNext = () => {\n    if (selection) {\n      // 추후에 다음 단계로 이동하는 로직 추가\n      console.log(selection); // 선택된 옵션을 콘솔에 출력\n      setCurrentStep(currentStep + 1);\n      // 다음 단계 상태 설정 등\n    }\n  };\n\n  const OptionButton = styled.button`\n    margin: 10px;\n    padding: 10px 20px;\n    background-color: ${props => props.isSelected ? \"#4caf50\" : \"#f8f8f8\"};\n    color: ${props => props.isSelected ? \"white\" : \"black\"};\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #def;\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(OptionButton, {\n        isSelected: selection === \"preference\",\n        onClick: () => handleSelect(\"preference\"),\n        children: \"\\uCDE8\\uD5A5\\uB300\\uB85C \\uCD94\\uCC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OptionButton, {\n        isSelected: selection === \"random\",\n        onClick: () => handleSelect(\"random\"),\n        children: \"\\uB79C\\uB364 \\uCD94\\uCC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !selection,\n      onClick: handleNext,\n      children: \"\\uB2E4\\uC74C\\uC73C\\uB85C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"AsFsqgyT4aENcrQC4UBralEMVnk=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","currentStep","setCurrentStep","selection","setSelection","handleSelect","option","handleNext","console","log","OptionButton","button","props","isSelected","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/jangjeong-an/JeonganJang/week3/src/components/main/Main.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nexport default function Main() {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selection, setSelection] = useState(\"\");\n\n  const handleSelect = (option) => {\n    setSelection(option);\n  };\n\n  const handleNext = () => {\n    if (selection) {\n      // 추후에 다음 단계로 이동하는 로직 추가\n      console.log(selection); // 선택된 옵션을 콘솔에 출력\n      setCurrentStep(currentStep + 1);\n      // 다음 단계 상태 설정 등\n    }\n  };\n\n  const OptionButton = styled.button`\n    margin: 10px;\n    padding: 10px 20px;\n    background-color: ${(props) => (props.isSelected ? \"#4caf50\" : \"#f8f8f8\")};\n    color: ${(props) => (props.isSelected ? \"white\" : \"black\")};\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: #def;\n    }\n  `;\n\n  return (\n    <div>\n      {currentStep === 1 && (\n        <>\n          <OptionButton\n            isSelected={selection === \"preference\"}\n            onClick={() => handleSelect(\"preference\")}\n          >\n            취향대로 추천\n          </OptionButton>\n          <OptionButton\n            isSelected={selection === \"random\"}\n            onClick={() => handleSelect(\"random\")}\n          >\n            랜덤 추천\n          </OptionButton>\n        </>\n      )}\n\n      <button disabled={!selection} onClick={handleNext}>\n        다음으로\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMY,YAAY,GAAIC,MAAM,IAAK;IAC/BF,YAAY,CAACE,MAAM,CAAC;EACtB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIJ,SAAS,EAAE;MACb;MACAK,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC,CAAC,CAAC;MACxBD,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;MAC/B;IACF;EACF,CAAC;;EAED,MAAMS,YAAY,GAAGhB,MAAM,CAACiB,MAAO;AACrC;AACA;AACA,wBAAyBC,KAAK,IAAMA,KAAK,CAACC,UAAU,GAAG,SAAS,GAAG,SAAW;AAC9E,aAAcD,KAAK,IAAMA,KAAK,CAACC,UAAU,GAAG,OAAO,GAAG,OAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EAED,oBACEjB,OAAA;IAAAkB,QAAA,GACGb,WAAW,KAAK,CAAC,iBAChBL,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA,CAACc,YAAY;QACXG,UAAU,EAAEV,SAAS,KAAK,YAAa;QACvCY,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAAC,YAAY,CAAE;QAAAS,QAAA,EAC3C;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACfvB,OAAA,CAACc,YAAY;QACXG,UAAU,EAAEV,SAAS,KAAK,QAAS;QACnCY,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAAC,QAAQ,CAAE;QAAAS,QAAA,EACvC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA,eACf,CACH,eAEDvB,OAAA;MAAQwB,QAAQ,EAAE,CAACjB,SAAU;MAACY,OAAO,EAAER,UAAW;MAAAO,QAAA,EAAC;IAEnD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CAvDuBD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}