{"ast":null,"code":"var _jsxFileName = \"/Users/jangjeong-an/JeonganJang/week3/src/components/main/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport StartScreen from \"./StartScreen\";\nimport CategoryScreen from \"./CategoryScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [screen, setScreen] = useState(\"start\"); // 현재 화면 상태\n  const [cuisine, setCuisine] = useState(\"\"); // 사용자가 선택한 음식 종류\n\n  const handleStartSelection = selection => {\n    // '취향대로 추천' 선택 시\n    if (selection === \"preference\") {\n      setScreen(\"cuisineSelection\");\n    } else {\n      // TODO '랜덤 추천' 선택 시, 랜덤 로직 구현\n\n      setScreen(\"result\");\n    }\n  };\n  const handleCategorySelection = type => {\n    setCuisine(type); // 사용자가 선택한 음식 종류 상태 업데이트\n    setScreen(\"menuSelection\");\n  };\n  const handleMenuSelection = menu => {\n    // 메뉴 선택 후 결과 화면으로\n    // ...\n    setScreen(\"result\");\n  };\n  switch (screen) {\n    case \"start\":\n      return /*#__PURE__*/_jsxDEV(StartScreen, {\n        onSelect: handleStartSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    case \"cuisineSelection\":\n      return /*#__PURE__*/_jsxDEV(CategoryScreen, {\n        onSelect: handleCategorySelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    //   case 'menuSelection':\n    //     return <MenuSelectionScreen cuisine={cuisine} onSelect={handleMenuSelection} />;\n    //   case 'result':\n    //     // 결과 화면 컴포넌트\n    //     // ...\n    //     return <div>선택한 메뉴: ...</div>;\n    default:\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC798\\uBABB\\uB41C \\uC811\\uADFC\\uC785\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n  }\n};\n_s(Main, \"WnIqpr968psrppHlK0VxcsJ6FB4=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","StartScreen","CategoryScreen","jsxDEV","_jsxDEV","Main","_s","screen","setScreen","cuisine","setCuisine","handleStartSelection","selection","handleCategorySelection","type","handleMenuSelection","menu","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/jangjeong-an/JeonganJang/week3/src/components/main/Main.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport StartScreen from \"./StartScreen\";\nimport CategoryScreen from \"./CategoryScreen\";\n\nconst Main = () => {\n  const [screen, setScreen] = useState(\"start\"); // 현재 화면 상태\n  const [cuisine, setCuisine] = useState(\"\"); // 사용자가 선택한 음식 종류\n\n  const handleStartSelection = (selection) => {\n    // '취향대로 추천' 선택 시\n    if (selection === \"preference\") {\n      setScreen(\"cuisineSelection\");\n    } else {\n      // TODO '랜덤 추천' 선택 시, 랜덤 로직 구현\n\n      setScreen(\"result\");\n    }\n  };\n\n  const handleCategorySelection = (type) => {\n    setCuisine(type); // 사용자가 선택한 음식 종류 상태 업데이트\n    setScreen(\"menuSelection\");\n  };\n\n  const handleMenuSelection = (menu) => {\n    // 메뉴 선택 후 결과 화면으로\n    // ...\n    setScreen(\"result\");\n  };\n\n  switch (screen) {\n    case \"start\":\n      return <StartScreen onSelect={handleStartSelection} />;\n    case \"cuisineSelection\":\n      return <CategoryScreen onSelect={handleCategorySelection} />;\n    //   case 'menuSelection':\n    //     return <MenuSelectionScreen cuisine={cuisine} onSelect={handleMenuSelection} />;\n    //   case 'result':\n    //     // 결과 화면 컴포넌트\n    //     // ...\n    //     return <div>선택한 메뉴: ...</div>;\n    default:\n      return <div>잘못된 접근입니다.</div>;\n  }\n};\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMW,oBAAoB,GAAIC,SAAS,IAAK;IAC1C;IACA,IAAIA,SAAS,KAAK,YAAY,EAAE;MAC9BJ,SAAS,CAAC,kBAAkB,CAAC;IAC/B,CAAC,MAAM;MACL;;MAEAA,SAAS,CAAC,QAAQ,CAAC;IACrB;EACF,CAAC;EAED,MAAMK,uBAAuB,GAAIC,IAAI,IAAK;IACxCJ,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;IAClBN,SAAS,CAAC,eAAe,CAAC;EAC5B,CAAC;EAED,MAAMO,mBAAmB,GAAIC,IAAI,IAAK;IACpC;IACA;IACAR,SAAS,CAAC,QAAQ,CAAC;EACrB,CAAC;EAED,QAAQD,MAAM;IACZ,KAAK,OAAO;MACV,oBAAOH,OAAA,CAACH,WAAW;QAACgB,QAAQ,EAAEN;MAAqB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxD,KAAK,kBAAkB;MACrB,oBAAOjB,OAAA,CAACF,cAAc;QAACe,QAAQ,EAAEJ;MAAwB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9D;IACA;IACA;IACA;IACA;IACA;IACA;MACE,oBAAOjB,OAAA;QAAAkB,QAAA,EAAK;MAAU;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;EAChC;AACF,CAAC;AAACf,EAAA,CAxCID,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}